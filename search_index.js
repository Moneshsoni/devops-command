var search_data = {"index":{"searchIndex":["command.sh","doc","license","makefile","readme","makefile","readme-example","readme-example.sh","shdoc","run_tests","setup.sh","teardown.sh","@name-and-@description.test.sh","function-in-@example.test.sh","function-tags.test.sh","global-tags.test.sh","issue-12-no-space-in-function-declaration.test.sh","issue-25-missing-trailing-newline-in-see-also.test.sh","issue-4-whitespace-in-function-declaration.test.sh"],"longSearchIndex":["","","","","","","","","","","","","","","","","","",""],"info":[["command.sh","","files/command_sh.html","","<p>!/bin/bash\n\n<pre><code>@file Command\nCommand: ./bin/devops ssh_config_generator\n@description\n\n     *Description:- ...\n</code></pre>\n"],["doc","","files/doc_md.html","","<p>Parsing sources…\n 5% [ 1/19] command.sh\n 10% [ 2/19] doc.md\n"],["LICENSE","","files/shdoc/LICENSE.html","","<p>MIT License\n<p>Copyright © 2017 Stanislav Seletskiy &amp; Egor Kovetskiy\n<p>Permission is hereby granted, free …\n"],["Makefile","","files/shdoc/Makefile.html","","<p>.PHONY: examples examples:\n\n<pre><code>$(MAKE) -C examples/ -B\n</code></pre>\n<p>vendor/%/Makefile:\n"],["README","","files/shdoc/README_md.html","","<p>shdoc\n<p>shdoc is a documentation generator for bash/zsh/sh for generating API\ndocumentation in Markdown …\n"],["Makefile","","files/shdoc/examples/Makefile.html","","<p>SHDOC   = ../shdoc OBJECTS = $(patsubst %.sh, %.md, $(wildcard *.sh))\n<p>all: $(OBJECTS)\n<p>%.md: %.sh\n"],["readme-example","","files/shdoc/examples/readme-example_md.html","","<p>libexample\n<p>A library that solves some common problems.\n<p>Overview\n"],["readme-example.sh","","files/shdoc/examples/readme-example_sh.html","","<p>#!/bin/bash # @file libexample # @brief A library that solves some common\nproblems. # @description # …\n"],["shdoc","","files/shdoc/shdoc.html","","<p>#!/usr/bin/gawk -f\n<p>BEGIN {\n\n<pre><code>if (! style) {\n    style = &quot;github&quot;\n}\n\nstyles[&quot;github&quot;, &quot;h1&quot;, &quot;from&quot;] = &quot;.*&quot; ...\n</code></pre>\n"],["run_tests","","files/shdoc/tests/run_tests.html","","<p>#!/bin/bash\n<p>set -euo pipefail\n<p>cd “$(dirname ”$(readlink -f “${BASH_SOURCE}”)“)” …\n"],["setup.sh","","files/shdoc/tests/setup_sh.html","","<p>tests:clone shdoc .\n<p>assert() {\n\n<pre><code>tests:ensure ./shdoc &lt; input\ntests:assert-no-diff expected stdout\n</code></pre>\n"],["teardown.sh","","files/shdoc/tests/teardown_sh.html","",""],["@name-and-@description.test.sh","","files/shdoc/tests/testcases/@name-and-@description_test_sh.html","","<p>#!/bin/bash\n<p>tests:put input &lt;&lt;EOF # @name Project Name # @brief Brief #\n@description a # b # c\n<p># …\n"],["function-in-@example.test.sh","","files/shdoc/tests/testcases/function-in-@example_test_sh.html","","<p>#!/bin/bash\n<p>tests:put input &lt;&lt;EOF # @description Same, as `tests:eval`, but\nwrites stdout into …\n"],["function-tags.test.sh","","files/shdoc/tests/testcases/function-tags_test_sh.html","","<p>#!/bin/bash\n<p>tests:put input &lt;&lt;EOF # @description Multiline description goes here\nand # there # # …\n"],["global-tags.test.sh","","files/shdoc/tests/testcases/global-tags_test_sh.html","","<p>#!/bin/bash\n<p>tests:put input &lt;&lt;EOF #!/bin/bash # # @file Title of file script #\n@brief Small description …\n"],["issue-12-no-space-in-function-declaration.test.sh","","files/shdoc/tests/testcases/issue-12-no-space-in-function-declaration_test_sh.html","","<p>#!/bin/bash\n<p>tests:put input &lt;&lt;EOF #!/bin/bash\n<p># @description a desc for fn1 fn1() {\n"],["issue-25-missing-trailing-newline-in-see-also.test.sh","","files/shdoc/tests/testcases/issue-25-missing-trailing-newline-in-see-also_test_sh.html","","<p>#!/bin/bash\n<p>tests:put input &lt;&lt;EOF #!/bin/bash\n<p># @description a desc for fn1 # @see fn2() fn1() { …\n"],["issue-4-whitespace-in-function-declaration.test.sh","","files/shdoc/tests/testcases/issue-4-whitespace-in-function-declaration_test_sh.html","","<p>#!/bin/bash\n<p>tests:put input &lt;&lt;EOF #!/bin/bash\n<p># @arg $1 string fn var. # @stdout result of fn function …\n"]]}}